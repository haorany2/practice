//273
class Solution {
    public String numberToWords(int num) {
        String res="";
        if (num==0)
            return "Zero";
        if (num/1000000000>0){
            res+=read_hund(num/1000000000)+" Billion ";
            num=num%1000000000;
        }
        if (num/1000000>0){
            res+=read_hund(num/1000000)+" Million ";
            num=num%1000000;
        }
        if (num/1000>0){
            res+=read_hund(num/1000)+" Thousand ";
            num=num%1000;
        }
        if (num>0)
            res+=read_hund(num);
        
        if (res.length()!=0&&res.charAt(res.length()-1)==' ')
            return res.substring(0,res.length()-1);
        
        //res=read_hund(130);
        //System.out.println(res);
        return res;
    }
    public String read_hund(int num){
        // HashMap<String,String> dict=new HashMap<String,String>();
        // dict.put("1",one);
        String []dict={"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine",
        "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
        
        
        String res="";
       
       
        
        if (num/100!=0){
            res=dict[num/100]+" Hundred ";
            num=num%100;
        }
        if(num/10>1){
            res=res+dict[18+num/10]+" ";
            if (num%10>0)
                res=res+dict[num%10];
        }
        if (num/10<=1&&num!=0){
            //System.out.println("d");
            res=res+dict[num];
        }
        
            
       
        if (res.length()!=0&&res.charAt(res.length()-1)==' ')
            return res.substring(0,res.length()-1);
        
        return res;
        
        
    }
}
