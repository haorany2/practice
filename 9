package quicksort;
import java.util.Arrays;
import  java.util. Collections;
import java.util.List;
public class quicksort_solve {
	static int partition(int[]arr,int left, int right){
		int pivot=arr[right];
		int l=left;
		int r=right;
		while(l<r){
			while (l<r&&arr[l]<pivot){
				l++;
			}
			while(l<r&&arr[r]>=pivot)
				r--;
			if(l<r){
				int temp=arr[l];
				arr[l]=arr[r];
				arr[r]=temp;
				//left++;
				//right--;
				
			}
		}
		int temp2=arr[l];
		arr[l]=arr[right];
		arr[right]=temp2;
		return l;
		
	}
	static void quicksort(int []arr,int left,int right){
		if (left>=right)
			return;
		int index=partition(arr,left,right);
		quicksort(arr,left,index-1);
		quicksort(arr,index+1, right);
	}

	static void display(int []arr){
		for (int i=0;i<arr.length;i++){
			System.out.println(arr[i]);
		}
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int [] array={5,2,7,1,4,8,3,10,9};
		quicksort(array,0,8);
		display(array);
	}

}
