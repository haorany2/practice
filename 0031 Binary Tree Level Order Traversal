//102
//breadth first search
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> res=new ArrayList<List<Integer>>();
        if (root==null)
            return res;
        
        List<TreeNode> temp=new ArrayList<TreeNode>();
        temp.add(root);
        temp.add(null);
        List<Integer> curr=new ArrayList<Integer>();
        while (temp.size()!=0 ){//(true)    //coment is the second way to handle the last item
            //if (temp.size()==1&&temp.get(0)==null)
            //    break;
            if (temp.get(0)!=null){
                TreeNode del=temp.remove(0);
                curr.add(del.val);
                if (del.left!=null){
                    temp.add(del.left);
                }
                if (del.right!=null){
                    temp.add(del.right);
                }
                
                
            }
            else {
                temp.remove(0);
                if (temp.size()!=0)
                    temp.add(null);
                
                res.add(curr);
                curr=new ArrayList<Integer>();
            }   
        }
        //res.add(curr);  
        
        return res;
        
        
    }
    

}
