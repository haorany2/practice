/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */

class Solution {
   
    public ListNode sortList(ListNode head) {
        if (head==null ||head.next==null)
            return head;
        ListNode mid=head;
        ListNode end=head;
        ListNode setup=null;
        while(end!=null&&end.next!=null){
            setup=mid;
            mid=mid.next;
            end=end.next.next;
            
        }
        setup.next=null;
        ListNode l1=sortList(head);
        ListNode l2=sortList(mid);
        return merge(l1,l2);  
    }
    
    ListNode merge(ListNode left_low, ListNode right_low){
        ListNode l=left_low;
        ListNode r=right_low;
        //System.out.println(l.val);
        //System.out.println(r.val);
        ListNode temp=new ListNode(-1);
        ListNode checker=temp;
        while(l!=null&&r!=null){
            if (l.val<r.val){
                temp.next=l;
                 l=l.next;
                temp.next.next=null;
               
                
                temp=temp.next;
            }
            else{
                temp.next=r;
                 r=r.next;
                temp.next.next=null;
               
                
               temp=temp.next;
            }
        }
        if (r!=null){
            //System.out.println("first "+temp.val);
            temp.next=r;
        }
        if(l!=null){
            temp.next=l;
        }
        return checker.next;
    }
    
