//89
//I do it with recursion

class Solution {
    public List<Integer> grayCode(int n) {
        List<Integer> res=new ArrayList<Integer>();
        
        if (n==0){
            res.add (0);
            return res;
        }
        help(1,res,n);
        return res;    
    }
    
    public void help(int n,List<Integer> res, int max_bit ){
        if (n==1){
            res.add(0);
            res.add(1);
        }
        else if (n>max_bit)
            return;
        else if (n>1 &&n<= max_bit){
            
            int original_size=res.size();
            ArrayList<Integer> temp=new ArrayList<Integer>();
            for (int i=0;i<original_size;i++){
                temp.add(res.get(i)+ (int)(Math.pow(2,n-1)));
            }
            for (int i=original_size-1;i>=0;i--){
                res.add(temp.get(i));
            }
            
        }
        
        
        help(n+1,res,max_bit);
    }
}
